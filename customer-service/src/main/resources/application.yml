server:
  port: 9091
spring:
  threads:
    virtual:
      enabled: true
  application:
    name: customer-service
  jpa:
    show-sql: false
    open-in-view: false
    hibernate:
      ddl-auto: update
      use-new-id-generator-mappings: true
    generate-ddl: true
  datasource:
    url: ${SPRING_DATASOURCE_CUSTOMER_DB_URL:jdbc:postgresql://localhost:5433/customerdb} 
    username: ${SPRING_DATASOURCE_USERNAME_CUSTOMER_DB:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD_CUSTOMER_DB:postgres} # Sẽ được lấy từ Secret
    hikari:
      maximum-pool-size: ${SPRING_DATASOURCE_CUSTOMER_DB_MAXIMUM_POOL_SIZE:1000} 
      minimum-idle: ${SPRING_DATASOURCE_CUSTOMER_DB_MINIMUM_IDLE:50} 
      connection-timeout: ${SPRING_DATASOURCE_CUSTOMER_DB_CONNECTION_TIMEOUT:20000} # 20 giây
      max-lifetime: ${SPRING_DATASOURCE_CUSTOMER_DB_MAX_LIFETIME:600000} # 10 phút
    consul:
      host: ${CONSUL_HOST:localhost}
      port: ${CONSUL_PORT:8500}
    function:
      definition: handleReserveCustomerBalanceRequest;handleCompensateCustomerBalanceRequest
    stream:
      kafka:
        binder:
          brokers: ${KAFKA_BROKERS:localhost:9092}
      bindings:
        handleReserveCustomerBalanceRequest-in-0:
          destination: ORDER.events
        handleCompensateCustomerBalanceRequest-in-0:
          destination: ORDER.events
